package swr.sxc.zjs.yyf.game;

import java.awt.*;
import java.awt.image.*;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.*;
import java.util.concurrent.TimeUnit;

import javax.imageio.ImageIO;
import javax.swing.JPanel;

import swr.sxc.zjs.yyf.tools.MusicPlayer;

public class GamePanel extends JPanel {
	// 实现阴影渐变的参数
	protected float alpha;
	transient private Thread changThread;

	// 读取图片的线程
	transient protected Thread readImage;
	transient public boolean imageReady;

	// 保存一个Frame的引用
	transient protected GameFrame gameFrame;

	// 音乐播放器
	protected MusicPlayer player;

	// 改变alpha的值,arg决定是出现还是消失，0表示出现.speed代表速度
	public void alphaChange(int arg, final int speed) {
		if (changThread != null)
			changThread.stop();

		// alpha减小（背景出现）
		if (arg == 0)
			changThread = new Thread(new Runnable() {

				@Override
				public void run() {
					alpha = 1;
					for (int i = 100; i > 0; i--) {
						alpha = (float) i / 100;
						try {
							TimeUnit.MILLISECONDS.sleep(speed);
							repaint();
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
					}
				}
			});
		// alpha变大（背景消失）
		else {
			changThread = new Thread(new Runnable() {

				@Override
				public void run() {
					alpha = 0;
					for (int i = 0; i < 100; i++) {
						alpha = (float) i / 100;
						try {
							TimeUnit.MILLISECONDS.sleep(speed);
							repaint();
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
					}
				}
			});
		}
		changThread.start();
	}

	// 填充黑色实现渐显
	protected void changeShadow(Graphics g) {
		Graphics2D g2d = (Graphics2D) g;
		Composite savecm = g2d.getComposite();
		AlphaComposite alp = AlphaComposite.getInstance(
				AlphaComposite.SRC_OVER, alpha);
		g2d.setComposite(alp);
		g2d.fillRect(0, 0, getWidth(), getHeight());
		g2d.setComposite(savecm);
	}

	public GamePanel(GameFrame gameFrame) {
		this.gameFrame = gameFrame;
		setSize(1100, 800);
	}

	public GamePanel() {

	}

	public void setGameFrame(GameFrame gameFrame) {
		this.gameFrame = gameFrame;
	}

//	class ReadImageThread extends Thread {
//		private ArrayList<ImageAndPath> imageList;
//
//		public ReadImageThread(ImageAndPath... images) {
//			imageList = new ArrayList<ImageAndPath>();
//			imageList.addAll(Arrays.asList(images));
//			System.out.println(imageList.size());
//		}
//
//		public void run() {
//			imageReady = false;
//			if (imageList.size() != 0)
//				try {
//					for (ImageAndPath images : imageList) {
//						System.out.println("11");
//						images.image = ImageIO.read(new FileInputStream(
//								images.path));
//					}
//				} catch (FileNotFoundException e) {
//					// TODO 自动生成的 catch 块
//					e.printStackTrace();
//				} catch (IOException e) {
//					// TODO 自动生成的 catch 块
//					e.printStackTrace();
//				}
//			imageReady=true;
//			repaint();
//		}
//	}
}
